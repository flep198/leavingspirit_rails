<section id="placeholder" class="section"></section>

<section id="media" class="section wb">
	<div class="container">

		<div class="form-container radius-box glassy-bg small-10 small-centered medium-8 large-6 columns">
		  <h2 class="mbs">Payment</h2>

			<form id="payment-form" data-secret="<%= @payment_intent.client_secret %>">
  			<div id="payment-element">
    		<!-- placeholder for Elements -->
  			</div>
  		</br>
  			<button id="submit">Pay Now <%=session[:total_price]%>â‚¬</button>
  			  <div id="error-message">
    			<!-- Display error message to your customers here -->
  			</div>
			</form>


		</div>
	</div>
</section>

<script>

		const stripe = Stripe("<%=Rails.configuration.stripe[:publishable_key]%>");


		const options = {
			clientSecret: '<%=@payment_intent.client_secret%>',
  			// Fully customizable with appearance API.
  			appearance: {},
			};

		// Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in a previous step
		const elements = stripe.elements(options);



		// Create and mount the Payment Element
		const paymentElement = elements.create('payment');
		paymentElement.mount('#payment-element');

		const form = document.getElementById('payment-form');

		form.addEventListener('submit', async (event) => {
		  event.preventDefault();

		  const {error} = await stripe.confirmPayment({
		    //`Elements` instance that was used to create the Payment Element
		    elements,
		    confirmParams: {
		      return_url: '<%=request.base_url%>/charges/create',
		    },
		  });

		  if (error) {
		    // This point will only be reached if there is an immediate error when
		    // confirming the payment. Show error to your customer (for example, payment
		    // details incomplete)
		    const messageContainer = document.querySelector('#error-message');
		    messageContainer.textContent = error.message;
		  } else {
		    // Your customer will be redirected to your `return_url`. For some payment
		    // methods like iDEAL, your customer will be redirected to an intermediate
		    // site first to authorize the payment, then redirected to the `return_url`.
		  }
		});

</script>